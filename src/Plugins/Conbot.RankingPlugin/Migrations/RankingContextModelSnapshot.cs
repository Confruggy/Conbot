// <auto-generated />
using System;
using Conbot.RankingPlugin;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Conbot.RankingPlugin.Migrations
{
    [DbContext(typeof(RankingContext))]
    partial class RankingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("Conbot.RankingPlugin.Rank", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExperiencePoints")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBot")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastMessage")
                        .HasColumnType("TEXT");

                    b.Property<int>("RankedMessages")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalMessages")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasAlternateKey("GuildId", "UserId");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("Conbot.RankingPlugin.RankGuildConfiguration", b =>
                {
                    b.Property<ulong>("GuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("LevelUpAnnouncementsChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LevelUpAnnouncementsMinimumLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleRewardsType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowLevelUpAnnouncements")
                        .HasColumnType("INTEGER");

                    b.HasKey("GuildId");

                    b.ToTable("GuildConfigurations");
                });

            modelBuilder.Entity("Conbot.RankingPlugin.RankRoleReward", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasAlternateKey("GuildId", "Level");

                    b.HasAlternateKey("GuildId", "RoleId");

                    b.HasAlternateKey("Level", "RoleId");

                    b.HasAlternateKey("GuildId", "Level", "RoleId");

                    b.ToTable("RoleRewards");
                });

            modelBuilder.Entity("Conbot.RankingPlugin.RankRoleReward", b =>
                {
                    b.HasOne("Conbot.RankingPlugin.RankGuildConfiguration", "GuildConfiguration")
                        .WithMany()
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
