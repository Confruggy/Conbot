// <auto-generated />
using System;
using Conbot.RankingPlugin;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Conbot.RankingPlugin.Migrations
{
    [DbContext(typeof(RankingContext))]
    [Migration("20220213174433_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Conbot.RankingPlugin.IgnoredChannel", b =>
                {
                    b.Property<ulong>("ChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChannelId");

                    b.HasIndex("GuildId");

                    b.ToTable("IgnoredChannels");
                });

            modelBuilder.Entity("Conbot.RankingPlugin.Rank", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExperiencePoints")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsBot")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastMessage")
                        .HasColumnType("TEXT");

                    b.Property<int>("RankedMessages")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalMessages")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasAlternateKey("GuildId", "UserId");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("Conbot.RankingPlugin.RankGuildConfiguration", b =>
                {
                    b.Property<ulong>("GuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("LevelUpAnnouncementsChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LevelUpAnnouncementsMinimumLevel")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Multiplier")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RoleRewardsType")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("ShowLevelUpAnnouncements")
                        .HasColumnType("INTEGER");

                    b.HasKey("GuildId");

                    b.ToTable("GuildConfigurations");
                });

            modelBuilder.Entity("Conbot.RankingPlugin.RankRoleReward", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasAlternateKey("GuildId", "Level");

                    b.HasAlternateKey("GuildId", "RoleId");

                    b.HasAlternateKey("Level", "RoleId");

                    b.HasAlternateKey("GuildId", "Level", "RoleId");

                    b.ToTable("RoleRewards");
                });

            modelBuilder.Entity("Conbot.RankingPlugin.RankUserConfiguration", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("AnnouncementsAllowMentions")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("AnnouncementsSendDirectMessages")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("UserConfigurations");
                });

            modelBuilder.Entity("Conbot.RankingPlugin.IgnoredChannel", b =>
                {
                    b.HasOne("Conbot.RankingPlugin.RankGuildConfiguration", "GuildConfiguration")
                        .WithMany("IgnoredChannels")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuildConfiguration");
                });

            modelBuilder.Entity("Conbot.RankingPlugin.RankRoleReward", b =>
                {
                    b.HasOne("Conbot.RankingPlugin.RankGuildConfiguration", "GuildConfiguration")
                        .WithMany("RoleRewards")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuildConfiguration");
                });

            modelBuilder.Entity("Conbot.RankingPlugin.RankGuildConfiguration", b =>
                {
                    b.Navigation("IgnoredChannels");

                    b.Navigation("RoleRewards");
                });
#pragma warning restore 612, 618
        }
    }
}
